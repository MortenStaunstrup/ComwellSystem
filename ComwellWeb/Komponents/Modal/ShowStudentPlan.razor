<!-- Dette Modal viser den enkelte elevs subgoals i HR eller ved Køkkenchef / ansvarlig -->
@using ComwellWeb.Komponents.Modal;
@using ComwellWeb.Pages
@using ComwellWeb.Services.Interfaces
@using Core;
@inject ISubGoalService SubGoalService

<!-- Todo få til at se bedre ud med styling -->

@if (Visible && _studentSubGoalsCompleted != null || _studentSubGoalsNotCompleted != null)
{
    <div class="modal-backdrop" @onclick="CloseOnBackdropClick">
        <div class="modal-content" @onclick:stopPropagation>
            <button class="close-button" @onclick="Close">X</button>
            <ul>
                @if (_studentSubGoalsCompleted != null)
                {
                    @foreach (var sub in _studentSubGoalsCompleted)
                    {
                        <li>
                            @sub.SubGoalName
                            @sub.SubGoalDescription
                            @sub.SubGoalCategory
                            @sub.SubGoalDueDate
                        </li>
                    }
                }
            </ul>
            
            <ul>
                @if (_studentSubGoalsNotCompleted != null)
                {
                    @foreach (var sub in _studentSubGoalsNotCompleted)
                    {
                        <li>
                            @sub.SubGoalName
                            @sub.SubGoalDescription
                            @sub.SubGoalCategory
                            @sub.SubGoalDueDate
                        </li>
                    }
                }
            </ul>
            
        </div>
    </div>
}

@code {
    [Parameter] public bool Visible { get; set; }
    [Parameter] public EventCallback OnCloseRequested { get; set; }
    [Parameter] public User CurrentUser { get; set; }
    [Parameter] public int _studentId { get; set; }
    List<SubGoal>? _studentSubGoalsCompleted;
    List<SubGoal>? _studentSubGoalsNotCompleted;

    protected override async Task OnInitializedAsync()
    {
        _studentSubGoalsCompleted = await SubGoalService.GetCompletedSubGoalsByStudentIdAsync(_studentId);
        _studentSubGoalsNotCompleted = await SubGoalService.GetNotCompletedSubGoalsByStudentIdAsync(_studentId);
    }
    
    private Task Close() => OnCloseRequested.InvokeAsync();
    private Task CloseOnBackdropClick() => OnCloseRequested.InvokeAsync();

}