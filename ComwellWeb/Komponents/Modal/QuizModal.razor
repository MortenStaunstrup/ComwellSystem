@page "/quizmodal"
@using Core
@inject IUserService _userService

<div class="main-container">

  
    <div class="score-header">
        <h1>Din Score: <span id="score">@_currentUserScore%</span></h1>
    </div>

    <div class="content-wrapper">
    
        <div class="quiz-box">
            @if (HasQuiz)
            {
                <h2>Hvad bruges oftest i en klassisk dansk frikadelle?</h2>
                <div class="answers">
                    <button>Hakket svinek√∏d</button>
                    <button>Tun</button>
                    <button>Ris</button>
                    <button>Kartofler</button>
                </div>
            }
            else
            {
                <h2>Ingen quiz tilg√¶ngelig endnu.</h2>
            }
        </div>

     
        <div class="leaderboard">
            <h3>üèÜ Top 5</h3>
            @if (TopStudents != null)
            {
                foreach (var student in TopStudents)
                {
                    var score = Scores[student.UserId];
                    <div class="bar">
                        <span style="width: @score%">@student.UserName - @score%</span>
                    </div>
                }
            }
            else
            {
                <p>Indl√¶ser top 5...</p>
            }
        </div>
    </div>
</div>

@code {
    List<User> TopStudents = new();
    Dictionary<int, double> Scores = new();
    double _currentUserScore = 0;
    bool HasQuiz = true;

    protected override async Task OnInitializedAsync()
    {
        var allStudents = await _userService.GetAllStudentsAsync();

        // Midlertidige scores 
        var random = new Random();
        foreach (var student in allStudents)
        {
            Scores[student.UserId] = random.Next(50, 100); 
        }

   
        TopStudents = allStudents
            .OrderByDescending(s => Scores[s.UserId])
            .Take(5)
            .ToList();

        var currentUser = TopStudents.FirstOrDefault(); 
        if (currentUser != null)
        {
            _currentUserScore = Scores[currentUser.UserId];
        }
    }
}