@using ComwellWeb.Komponents.Modal
@using ComwellWeb.Services.Interfaces
@using Core;
@page "/MyGoals"
@inject ISubGoalService SubGoalService
@if (MySubGoalsList == null)
{
    <p>Loading your subgoals</p>
}
else
{
    <div class="kort-container">
        @foreach (var subgoal in MySubGoalsList)
        {
            <div class="delmål-kort" @onclick="@(() => OpenModal(subgoal))">
                
                <div class="delmål-type">Type: @subgoal.SubGoalCategory</div>
                <h4 class="delmål-titel">@subgoal.SubGoalName</h4>
                <p class="delmål-beskrivelse">@subgoal.SubGoalDescription</p>

                <p class="delmål-dato">
                    Deadline: @subgoal.SubGoalDueDate.ToString("dd-MM-yyyy") (@(subgoal.SubGoalDueDate.DayNumber - DateOnly.FromDateTime(DateTime.Now).DayNumber) days left)
                </p>
            </div>
        }
    </div>

}

@if (_completedSubGoals == null)
{
    
}
else
{
    <div class="kort-container">
        @foreach (var subgoal in _completedSubGoals)
        {
            <div class="delmål-kort" @onclick="@(() => OpenModal(subgoal))">
                
                <div class="delmål-type">Type: @subgoal.SubGoalCategory</div>
                <h4 class="delmål-titel">@subgoal.SubGoalName</h4>
                <p class="delmål-beskrivelse">@subgoal.SubGoalDescription</p>

                <p class="delmål-dato">
                    Deadline: @subgoal.SubGoalDueDate.ToString("dd-MM-yyyy") (@(subgoal.SubGoalDueDate.DayNumber - DateOnly.FromDateTime(DateTime.Now).DayNumber) days left)
                </p>
            </div>
        }
    </div>
}

<SubGoalDescriptionModal @ref="modal" CurrentUser="_currentUser" Goal="SelectedSubGoal" Visible="ShowModal" OnCloseRequested="CloseModal" VejenDerTil="VejenDerTil"/>
@code {
    private List<SubGoal>? MySubGoalsList;
    private List<SubGoal>? _completedSubGoals;
    private User _currentUser;

    SubGoalDescriptionModal? modal { get; set; }
private SubGoal? SelectedSubGoal;
private bool ShowModal = false;
public bool VejenDerTil = false;

protected override async Task OnInitializedAsync()
{
    _currentUser = new User()
    {
        UserId = 4
    };
    MySubGoalsList = await SubGoalService.GetNotCompletedSubGoalsByStudentIdAsync(_currentUser.UserId);
    _completedSubGoals = await SubGoalService.GetCompletedSubGoalsByStudentIdAsync(_currentUser.UserId);
}

private async void OpenModal(SubGoal goal)
{
    SelectedSubGoal = goal;
    ShowModal = true;
    VejenDerTil = false;
}

private void CloseModal()
{
    ShowModal = false;
}
}
