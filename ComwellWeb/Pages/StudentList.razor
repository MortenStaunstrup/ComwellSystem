@page "/studentlist"
@using ComwellWeb.Services.Interfaces
@using Core
@using ComwellWeb.Komponents.Modal
@inject ISubGoalService SubGoalService
@inject HttpClient Http
@inject IUserService _userservice

<div class="studentlist-wrapper">

    <!-- FILTER -->
    <div class="filter-container">
        <!-- Lokation / Hoteller -->
        <select id="hotelFilter">
            <option value="">Alle hoteller</option>
            @foreach (var hotel in hotelList)
            {
                <option value="@hotel">@hotel</option>
            }
        </select>

        <!-- Praktikperiode (Start og slut) -->
        <div id="datoknapper">
            <div class="datoknap">
                <label for="startDateFilter">Startdato</label>
                <input type="date" id="startDateFilter" />
            </div>
            <div class="datoknap">
                <label for="endDateFilter">Slutdato</label>
                <input type="date" id="endDateFilter" />
            </div>
        </div>

        <!-- Uddannelse -->
        <select id="educationFilter">
            <option value="">Alle uddannelser</option>
            @foreach (var edu in educationList)
            {
                <option value="@edu">@edu</option>
            }
        </select>

        <!-- Ture -->
        <select id="tripFilter">
            <option value="">Alle ture</option>
            @foreach (var Trip in TripList)
            {
                <option value="@Trip">@Trip</option>
            }
        </select>
    </div>

    <!-- STUDENT LIST -->
    @if (_allStudents == null)
    {
        <p>Indlæser...</p>
    }
    else
    {
        foreach (var student in _sortedStudents)
        {
            <div class="student-row" @onclick="()=>ShowStudentPlan(student.UserId)">
                <span class="student-name">@student.UserName</span>
                <span>@student.StartDate</span>
                <span>@_pctCompleted[student.UserId]%</span>
                <div class="progress-container">
                    <div class="progress-bar" style="width: @_pctCompleted[student.UserId]%;"></div>
                </div>
            </div>
        }
    }
</div>

@code{
    User? _currentUser;
    List<User>? _allStudents;
    List<User>? _sortedStudents;
    Dictionary<int, double>? _pctCompleted;
    int _currentShownStudent;
    bool ShowModal = false;

    List<string> hotelList = new() { "Comwell Aarhus", "Comwell Kolding", "Comwell H.C. Andersen Odense" };
    List<string> educationList = new() { "Kok", "Tjener", "Receptionist", "Cater" };
    List<string> TripList = new() { "Italiten", "ÅrhusGåGade", "Juleturen" };

    protected override async Task OnInitializedAsync()
    {
        _allStudents = await _userservice.GetAllStudentsAsync();
        _sortedStudents = _allStudents;
        _pctCompleted = new Dictionary<int, double>();
        foreach (var student in _allStudents)
        {
            _pctCompleted[student.UserId] = Double.Truncate(await SubGoalService.GetPctCompletedSubGoalsByStudentIdAsync(student.UserId));
        }
    }

    private void ShowStudentPlan(int studentId)
    {
        _currentShownStudent = studentId;
        ShowModal = true;
    }

    private void CloseModal()
    {
        ShowModal = false;
    }
}
