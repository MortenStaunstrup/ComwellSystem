@using ComwellWeb.Komponents.Modal
@using ComwellWeb.Services.Interfaces
@using Core;
@page "/RegisterSubGoal"
@inject ISubGoalService SubGoalService
@inject IUserService UserService

<div class="subgoal-wrapper">
    @if (_currentUser == null)
    {
        <p class="empty-message">Authenticating...</p>
    }
    else if (_currentUser.Role != "Student")
    {
        <p class="empty-message">Kun elever kan ansøge om ekstra delmål</p>
    }
    else if (_offeredSubGoals == null || !_offeredSubGoals.Any())
    {
        <p class="empty-message">Ingen ekstra delmål eksisterer, eller du har dem allerede</p>
    }
    else
    {
        <div class="subgoal-container scrollable-box">
            <ul>
                @foreach (var subgoal in _offeredSubGoals)
                {
                    if (!ownGoalsDict.ContainsKey(subgoal.SubGoalId))
                    {
                        <li @onclick="() => OpenModal(subgoal)">
                            <label><b>Navn:</b></label> @subgoal.SubGoalName<br />
                        </li>
                    }
                }
            </ul>
        </div>
    }
</div>
<SubGoalDescriptionModal Goal="SelectedSubGoal" Visible="ShowModal" OnCloseRequested="CloseModal" VejenDerTil="VejenDerTil" CurrentUser="_currentUser"/>
@code {
    private List<SubGoal>? _offeredSubGoals;
    private Dictionary<int, int> ownGoalsDict = new Dictionary<int, int>();
    private SubGoal? SelectedSubGoal;
    private bool ShowModal = false;
    public bool VejenDerTil = true;
    private User? _currentUser;

    protected override async Task OnInitializedAsync()
    {
        _currentUser = await UserService.GetUserLoggedInAsync();
        _offeredSubGoals = await SubGoalService.GetOfferedSubGoalsAsync();

        var _ownOfferedSubGoals = await SubGoalService.GetOfferedSubGoalsByStudentIdAsync(_currentUser.UserId);
        if (_ownOfferedSubGoals != null)
        {
            foreach (var owngoal in _ownOfferedSubGoals)
            {
                ownGoalsDict[owngoal.SubGoalId] = 0;
            }
        }
    }

    private void OpenModal(SubGoal goal)
    {
        SelectedSubGoal = goal;
        ShowModal = true;
        VejenDerTil = true;
    }

    private void CloseModal()
    {
        ShowModal = false;
    }
}
