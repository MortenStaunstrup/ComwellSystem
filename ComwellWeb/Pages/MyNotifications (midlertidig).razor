@page "/noti"

@using Blazored.LocalStorage
@using Core
@inject INotificationService NotificationService
@inject ILocalStorageService LocalStorage

<h3>Dine notifikationer</h3>

@if (_notifications == null)
{
    <p>Indlæser...</p>
}
else if (!_notifications.Any())
{
    <p>Ingen notifikationer.</p>
}
else
{
    @foreach (var notification in _notifications)
    {
        <div class="notification">
            <p>@notification.Message</p>
            @if (!notification.IsConfirmed)
            {
                <button @onclick="() => Confirm(notification.Id)">Bekræft</button>
            }
            else
            {
                <span>✅ Bekræftet</span>
            }
        </div>
    }
}

@code {
    private List<Notification>? _notifications;
    private int _userId;

    protected override async Task OnInitializedAsync()
    {
        var user = await LocalStorage.GetItemAsync<User>("user");

        if (user == null || user.UserId == 0)
        {
            Console.WriteLine("DEBUG: Bruger ikke fundet eller userId er 0");
            return;
        }

        _userId = user.UserId;

        Console.WriteLine($"DEBUG: Hentet userId = {_userId}");

        _notifications = await NotificationService.GetNotificationsForUserAsync(_userId);
    }


    private async Task Confirm(int notificationId)
    {
        await NotificationService.ConfirmSubGoalCompletionAsync(notificationId);

        var notification = _notifications?.FirstOrDefault(n => n.Id == notificationId);
        if (notification != null)
        {
            notification.IsConfirmed = true;
        }
    }
    
}