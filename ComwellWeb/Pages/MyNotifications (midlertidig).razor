@page "/noti"

@using Blazored.LocalStorage
@using ComwellWeb.Services.Interfaces
@using Core
@inject INotificationService NotificationService
@inject IUserService UserService
@inject ILocalStorageService LocalStorage

<h3>Dine notifikationer</h3>

@if (_notifications == null)
{
    <p>Indlæser...</p>
}
else if (!_notifications.Any())
{
    <p>Ingen notifikationer.</p>
}
else
{
    <h4>Minimål</h4>
    @foreach (var notification in _notifications.Where(n => !string.IsNullOrWhiteSpace(n.MiniGoalName)))
    {
        <div class="notification">
            <p>@notification.NotificationContent</p>
            @if (!notification.IsConfirmed)
            {
                <button @onclick="() => ConfirmNotifiedMiniGoalAsync(notification)">Bekræft</button>
            }
            else
            {
                <span>Bekræftet</span>
            }
        </div>
    }

    <h4>Middelmål</h4>
    @foreach (var notification in _notifications.Where(n => !string.IsNullOrWhiteSpace(n.MiddleGoalName)))
    {
        <div class="notification">
            <p>@notification.NotificationContent</p>
            @if (!notification.IsConfirmed)
            {
                <button @onclick="() => ConfirmNotifiedMiddleGoalAsync(notification)">Bekræft</button>
            }
            else
            {
                <span>Bekræftet</span>
            }
        </div>
    }
}

@code {
    private List<Notification>? _notifications;
    private int currentUserId;

    protected override async Task OnInitializedAsync()
    {
        var user = await LocalStorage.GetItemAsync<User>("user");

        if (user == null || user.UserId == 0)
        {
            Console.WriteLine("Bruger ikke fundet eller userId er 0");
            return;
        }

        currentUserId = user.UserId;
        _notifications = await NotificationService.GetNotificationsByUserIdAsync(currentUserId);
    }

    private async Task ConfirmNotifiedMiniGoalAsync(Notification notification)
    {
        if (notification?.UserId == null || notification.UserId == 0 || string.IsNullOrWhiteSpace(notification.MiniGoalName))
        {
            Console.WriteLine("Ugyldig mini goal notifikation");
            return;
        }

        await NotificationService.ConfirmNotifiedMiniGoalAsync(
            notification.UserId.Value,
            notification.NotificationId,
            notification.MiniGoalName
        );

        notification.IsConfirmed = true;
        StateHasChanged();
    }

    private async Task ConfirmNotifiedMiddleGoalAsync(Notification notification)
    {
        if (notification?.UserId == null || notification.UserId == 0 || string.IsNullOrWhiteSpace(notification.MiddleGoalName))
        {
            Console.WriteLine("Ugyldig middle goal notifikation");
            return;
        }

        await NotificationService.ConfirmNotifiedMiddleGoalAsync(
            notification.UserId.Value,
            notification.NotificationId,
            notification.MiddleGoalName
        );

        notification.IsConfirmed = true;
        StateHasChanged();
    }
}
