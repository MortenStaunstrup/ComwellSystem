@using System.Collections
@using ComwellWeb.Services.Interfaces
@using Core;
@inject IUserService UserService
@inject ISubGoalService SubGoalService
@page "/MyStudents"

<div class="page-wrapper">
    <div class="header">
        <div class="search-container">
            <input type="text" value="@searchQuery" @onchange="Filter" placeholder="Søg på studerende..." class="search-input" />
            <select value="@sortOrder" @onchange="Sort" class="sort-dropdown">
                <option value="asc">A-Z</option>
                <option value="desc">Z-A</option>
            </select>
        </div>
    </div>

    <div id="AltIndhold">
        <div class="student-scroll-container">
            @if (_filteredList == null || studentPcts == null)
            {
                <p>Loading your students...</p>
            }
            else
            {
                @foreach (var Student in _filteredList)
                {
                    <a href="@($"/StudentOverview/{Student.UserId}")" class="student-row-link">
                        <div class="student-row">
                            @if (Student.Picture == null)
                            {
                                <img class="profile-picture" alt="Intet Profil billede" src="Pictures/NoProfilePicture.png"/>
                            }
                            else
                            {
                                <img class="profile-picture" alt="Profil billede" src="@Student.Picture"/>
                            }

                            <div class="progress-and-name">
                                <h3>@Student.UserName</h3>
                                <span>@studentPcts[Student.UserId]%</span>
                                <div class="progress-container">
                                    <div class="progress-bar" style="width: @studentPcts[Student.UserId]%"></div>
                                </div>
                            </div>

                            <div class="emoji-container">
                                <img class="EmojiPic" alt="Progress emoji" src="Pictures/NoProfilePicture.png"/>
                            </div>
                        </div>
                    </a>
                }
                
            }
        </div>
    </div>
</div>

@code {
    public List<User>? MyStudentsList;
    private IEnumerable<User>? _filteredList;
    private Dictionary<int, double>? studentPcts;
    
    private string searchQuery = string.Empty;
    private string sortOrder = "asc";

    protected override async Task OnInitializedAsync()
    {
        // Todo skal sættes til currentUser
        MyStudentsList = await UserService.GetAllStudentsByResponsibleIdAsync(1);
        if (MyStudentsList != null)
        {
            _filteredList = MyStudentsList.OrderBy(u => u.UserName);
            studentPcts = new Dictionary<int, double>();
            foreach (var student in MyStudentsList)
            {
                studentPcts[student.UserId] = Double.Truncate(await SubGoalService.GetPctCompletedSubGoalsByStudentIdAsync(student.UserId));
            }
        }
    }
    

    private void Filter(ChangeEventArgs e)
    {
        searchQuery = e.Value.ToString();
        if (MyStudentsList != null)
        {
            _filteredList = MyStudentsList.Where(s => string.IsNullOrEmpty(searchQuery) || s.UserName.Contains(searchQuery, StringComparison.OrdinalIgnoreCase));
        }
    }

    private void Sort(ChangeEventArgs e)
    {
        sortOrder = e.Value.ToString();
        if (MyStudentsList != null)
        {
            if (sortOrder == "asc")
                _filteredList = _filteredList.OrderBy(s => s.UserName);
            if (sortOrder == "desc")
                _filteredList = _filteredList.OrderByDescending(s => s.UserName);
        }
        
    }

}